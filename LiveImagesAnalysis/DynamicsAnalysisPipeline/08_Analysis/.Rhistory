data = DistanceTableFiltered
) +
geom_path(
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
group = NEIGHBOR_ID,
color = NEIGHBOR_NORMALIZED_INTENSITY
),
size = 1.25) +
geom_path(
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
group = SOURCE_ID,
color = SOURCE_NORMALIZED_INTENSITY
),
size = 1.25) +
scale_color_viridis("Normalized Intensity", option="inferno") +
new_scale_color() +
facet_wrap_paginate(
~ PAIR,
scales = "free",
page = PageX,
nrow = 4,
ncol = 6
) +
geom_point(
data = DistanceTableFiltered %>% filter(NEIGHBOR_FRAME_CAT != 0),
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
color = NEIGHBOR_FRAME_CAT
)
) +
geom_point(
data = DistanceTableFiltered %>% filter(SOURCE_FRAME_CAT != 0),
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
color = SOURCE_FRAME_CAT
)
) +
scale_color_brewer(palette = "Set1")+
scale_x_continuous(
expand = c(0,0)
) +
scale_y_reverse(
expand = c(0,0)
) +
labs(
y = "y-position (µm)",
x = "x-position (µm)",
color = "Frame Category"
) +
theme_classic()
install.packages(ggforce)
install.packages("ggforce")
library(ggforce)
Plot <-
ggplot(
data = DistanceTableFiltered
) +
geom_path(
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
group = NEIGHBOR_ID,
color = NEIGHBOR_NORMALIZED_INTENSITY
),
size = 1.25) +
geom_path(
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
group = SOURCE_ID,
color = SOURCE_NORMALIZED_INTENSITY
),
size = 1.25) +
scale_color_viridis("Normalized Intensity", option="inferno") +
new_scale_color() +
facet_wrap_paginate(
~ PAIR,
scales = "free",
page = PageX,
nrow = 4,
ncol = 6
) +
geom_point(
data = DistanceTableFiltered %>% filter(NEIGHBOR_FRAME_CAT != 0),
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
color = NEIGHBOR_FRAME_CAT
)
) +
geom_point(
data = DistanceTableFiltered %>% filter(SOURCE_FRAME_CAT != 0),
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
color = SOURCE_FRAME_CAT
)
) +
scale_color_brewer(palette = "Set1")+
scale_x_continuous(
expand = c(0,0)
) +
scale_y_reverse(
expand = c(0,0)
) +
labs(
y = "y-position (µm)",
x = "x-position (µm)",
color = "Frame Category"
) +
theme_classic()
Plot
DistancePlotFx <- function(PageX) {
tryCatch({
Plot <-
ggplot(
data = DistanceTableFiltered
) +
geom_path(
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
group = NEIGHBOR_ID,
color = NEIGHBOR_NORMALIZED_INTENSITY
),
size = 1.25) +
geom_path(
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
group = SOURCE_ID,
color = SOURCE_NORMALIZED_INTENSITY
),
size = 1.25) +
scale_color_viridis("Normalized Intensity", option="inferno") +
new_scale_color() +
facet_wrap_paginate(
~ PAIR,
scales = "free",
page = PageX,
nrow = 4,
ncol = 6
) +
geom_point(
data = DistanceTableFiltered %>% filter(NEIGHBOR_FRAME_CAT != 0),
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
color = NEIGHBOR_FRAME_CAT
)
) +
geom_point(
data = DistanceTableFiltered %>% filter(SOURCE_FRAME_CAT != 0),
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
color = SOURCE_FRAME_CAT
)
) +
scale_color_brewer(palette = "Set1")+
scale_x_continuous(
expand = c(0,0)
) +
scale_y_reverse(
expand = c(0,0)
) +
labs(
y = "y-position (µm)",
x = "x-position (µm)",
color = "Frame Category"
) +
theme_classic()
Plot
}, error = function(e) {print(paste("   ERROR with ColocalizationIntensityImageFx ImageX =", ImageX))})
}
nPlots = 1:ceiling(NROW(unique(DistanceTableFiltered$PAIR))/20)
Plots <- mclapply(nPlots, DistancePlotFx)
PageX
ggplot(
data = DistanceTableFiltered
) +
geom_path(
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
group = NEIGHBOR_ID,
color = NEIGHBOR_NORMALIZED_INTENSITY
),
size = 1.25) +
geom_path(
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
group = SOURCE_ID,
color = SOURCE_NORMALIZED_INTENSITY
),
size = 1.25) +
scale_color_viridis("Normalized Intensity", option="inferno") +
new_scale_color() +
facet_wrap_paginate(
~ PAIR,
scales = "free",
page = PageX,
nrow = 4,
ncol = 6
) +
geom_point(
data = DistanceTableFiltered %>% filter(NEIGHBOR_FRAME_CAT != 0),
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
color = NEIGHBOR_FRAME_CAT
)
) +
geom_point(
data = DistanceTableFiltered %>% filter(SOURCE_FRAME_CAT != 0),
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
color = SOURCE_FRAME_CAT
)
) +
scale_color_brewer(palette = "Set1")+
scale_x_continuous(
expand = c(0,0)
) +
scale_y_reverse(
expand = c(0,0)
) +
labs(
y = "y-position (µm)",
x = "x-position (µm)",
color = "Frame Category"
) +
theme_classic()
unique(DistanceTableFiltered$PAIR)
unique(DistanceTableFiltered$PAIR)
PAIRS <- unique(DistanceTableFiltered$PAIR)
PAIRS[1:20]
PageX
DistancePlot <-
DistancePlot %>%
filter(
PAIR %in% PAIRS[1+PageX:20*PageX]
)
ggplot(
data = DistancePlot
) +
geom_path(
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
group = NEIGHBOR_ID,
color = NEIGHBOR_NORMALIZED_INTENSITY
),
size = 1.25) +
geom_path(
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
group = SOURCE_ID,
color = SOURCE_NORMALIZED_INTENSITY
),
size = 1.25) +
scale_color_viridis("Normalized Intensity", option="inferno") +
new_scale_color() +
facet_wrap(
~ PAIR,
scales = "free",
nrow = 4,
ncol = 6
) +
geom_point(
data = DistancePlot %>% filter(NEIGHBOR_FRAME_CAT != 0),
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
color = NEIGHBOR_FRAME_CAT
)
) +
geom_point(
data = DistancePlot %>% filter(SOURCE_FRAME_CAT != 0),
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
color = SOURCE_FRAME_CAT
)
) +
scale_color_brewer(palette = "Set1")+
scale_x_continuous(
expand = c(0,0)
) +
scale_y_reverse(
expand = c(0,0)
) +
labs(
y = "y-position (µm)",
x = "x-position (µm)",
color = "Frame Category"
) +
theme_classic()
DistancePlot <-
DistancePlot %>%
filter(
PAIR %in% PAIRS[1+PageX:24*PageX]
)
Plot <-
ggplot(
data = DistancePlot
) +
geom_path(
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
group = NEIGHBOR_ID,
color = NEIGHBOR_NORMALIZED_INTENSITY
),
size = 1.25) +
geom_path(
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
group = SOURCE_ID,
color = SOURCE_NORMALIZED_INTENSITY
),
size = 1.25) +
scale_color_viridis("Normalized Intensity", option="inferno") +
new_scale_color() +
facet_wrap(
~ PAIR,
scales = "free",
nrow = 4,
ncol = 6
) +
geom_point(
data = DistancePlot %>% filter(NEIGHBOR_FRAME_CAT != 0),
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
color = NEIGHBOR_FRAME_CAT
)
) +
geom_point(
data = DistancePlot %>% filter(SOURCE_FRAME_CAT != 0),
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
color = SOURCE_FRAME_CAT
)
) +
scale_color_brewer(palette = "Set1")+
scale_x_continuous(
expand = c(0,0)
) +
scale_y_reverse(
expand = c(0,0)
) +
labs(
y = "y-position (µm)",
x = "x-position (µm)",
color = "Frame Category"
) +
theme_classic()
Plot
DistancePlot
Plot
DistancePlot <-
DistancePlot %>%
filter(
PAIR %in% PAIRS[1+PageX:20*PageX]
)
Plot <-
ggplot(
data = DistancePlot
) +
geom_path(
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
group = NEIGHBOR_ID,
color = NEIGHBOR_NORMALIZED_INTENSITY
),
size = 1.25) +
geom_path(
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
group = SOURCE_ID,
color = SOURCE_NORMALIZED_INTENSITY
),
size = 1.25) +
scale_color_viridis("Normalized Intensity", option="inferno") +
new_scale_color() +
facet_wrap(
~ PAIR,
scales = "free",
nrow = 4,
ncol = 5
) +
geom_point(
data = DistancePlot %>% filter(NEIGHBOR_FRAME_CAT != 0),
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
color = NEIGHBOR_FRAME_CAT
)
) +
geom_point(
data = DistancePlot %>% filter(SOURCE_FRAME_CAT != 0),
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
color = SOURCE_FRAME_CAT
)
) +
scale_color_brewer(palette = "Set1")+
scale_x_continuous(
expand = c(0,0)
) +
scale_y_reverse(
expand = c(0,0)
) +
labs(
y = "y-position (µm)",
x = "x-position (µm)",
color = "Frame Category"
) +
theme_classic()
Plot
Plot
DistancePlotFx <- function(PageX) {
tryCatch({
DistancePlot <-
DistancePlot %>%
filter(
PAIR %in% PAIRS[1+PageX:20*PageX]
)
Plot <-
ggplot(
data = DistancePlot
) +
geom_path(
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
group = NEIGHBOR_ID,
color = NEIGHBOR_NORMALIZED_INTENSITY
),
size = 1.25) +
geom_path(
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
group = SOURCE_ID,
color = SOURCE_NORMALIZED_INTENSITY
),
size = 1.25) +
scale_color_viridis("Normalized Intensity", option="inferno") +
new_scale_color() +
facet_wrap(
~ PAIR,
scales = "free",
nrow = 4,
ncol = 5
) +
geom_point(
data = DistancePlot %>% filter(NEIGHBOR_FRAME_CAT != 0),
aes(
x = NEIGHBOR_POSITION_X,
y = NEIGHBOR_POSITION_Y,
color = NEIGHBOR_FRAME_CAT
)
) +
geom_point(
data = DistancePlot %>% filter(SOURCE_FRAME_CAT != 0),
aes(
x = SOURCE_POSITION_X,
y = SOURCE_POSITION_Y,
color = SOURCE_FRAME_CAT
)
) +
scale_color_brewer(palette = "Set1")+
scale_x_continuous(
expand = c(0,0)
) +
scale_y_reverse(
expand = c(0,0)
) +
labs(
y = "y-position (µm)",
x = "x-position (µm)",
color = "Frame Category"
) +
theme_classic()
Plot
}, error = function(e) {print(paste("   ERROR with ColocalizationIntensityImageFx ImageX =", ImageX))})
}
n_pages(DistanceTableFilteredw)
nPlots = 1:ceiling(NROW(unique(DistanceTableFiltered$PAIR))/20)
Plots <- mclapply(nPlots, DistancePlotFx)
pdf("rplot.pdf")
Plot
dev.off()
pdf("rplot.pdf", height = 9, width = 16)
Plot
dev.off()
